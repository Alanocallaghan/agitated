% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agitated.R, R/package.R
\docType{package}
\name{agitated}
\alias{agitated}
\title{An alternative to the UpSetR package for upset plots.}
\usage{
agitated(
  x,
  nsets = 20,
  exclusive = TRUE,
  intersection_order = c("frequency", "degree"),
  sort_sets = TRUE,
  title = NULL,
  subtitle = NULL,
  return_plots = FALSE
)
}
\arguments{
\item{x}{A list or presence/absence matrix.}

\item{nsets}{Numeric scalar specifying the maximum number of sets to be shown.}

\item{exclusive}{Logical scalar controlling whether the intersections should
be exclusive.}

\item{intersection_order}{Character scalar controlling whether sorting of
intersections is done by \code{"frequency"} (size of intersection) or
\code{"degree"} (number of intersecting sets).}

\item{sort_sets}{Logical scalar controlling whether the input sets are 
re-ordered based on descending size.}

\item{title, subtitle}{Character scalars specifying plot title and subtitle.}

\item{return_plots}{Logical scalar specifying whether the ggplot2 objects
should be returned directly (\code{TRUE}) or if 
\code{\link[cowplot]{plot_grid}} should be called on these objects instead.}
}
\value{
If \code{return_plots = TRUE}, the function returns a list of three
ggplot2 objects.
If \code{return_plots = TRUE},
the function calls \code{\link[cowplot]{plot_grid}} on the plot objects.
}
\description{
A lightweight (and reasonably efficient) alternative to the UpSetR 
package. These plots allow visualisation of an arbitrary number of set 
interactions (see http://doi.org/gbjxr9).
}
\section{agitated functions}{

agitated: produce an upset plot
}

\examples{

data <- agitated:::example_data()
agitated(data)

agitated(data, nsets = 10)

agitated(data, exclusive = FALSE)

agitated(data, intersection_order = "degree")

agitated(data, sort_sets = FALSE)

agitated(data, title = "title", subtitle = "subtitle")
}
\references{
UpSetR: an R package for the visualization of intersecting sets and their properties
 Jake R Conway, Alexander Lex, Nils Gehlenborg
 <doi:10.1093/bioinformatics/btx364>.
}
